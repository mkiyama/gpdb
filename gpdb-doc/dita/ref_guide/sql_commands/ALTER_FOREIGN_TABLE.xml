<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Composite//EN" "ditabase.dtd">
<topic id="topic1">
    <title id="bv20941">ALTER FOREIGN TABLE</title>
    <body>
        <p id="sql_command_desc">Changes the definition of a foreign table.</p>
        <section id="section2">
            <title>Synopsis</title>
            <codeblock id="sql_command_synopsis">ALTER FOREIGN TABLE <varname>name</varname>
    <varname>action</varname> [, ... ]
ALTER FOREIGN TABLE <varname>name</varname>
    RENAME [ COLUMN ] <varname>column</varname> TO <varname>new_column</varname>
ALTER FOREIGN TABLE <varname>name</varname>
    RENAME TO <varname>new_name</varname>
ALTER FOREIGN TABLE <varname>name</varname>
    SET SCHEMA <varname>new_schema</varname>
</codeblock>

<p>where <varname>action</varname> is one of:</p><codeblock>

    ADD [ COLUMN ] <varname>column_type</varname> [ NULL | NOT NULL ]
    DROP [ COLUMN ] [ IF EXISTS ] <varname>column</varname> [ RESTRICT | CASCADE ]
    ALTER [ COLUMN ] <varname>column</varname> [ SET DATA ] TYPE <varname>type</varname>
    ALTER [ COLUMN ] <varname>column</varname> { SET | DROP } NOT NULL
    OWNER TO <varname>new_owner</varname>
    OPTIONS ( [ ADD | SET | DROP ] <varname>option</varname> ['<varname>value</varname>'] [, ... ] )</codeblock>
        </section>
        <section id="section3">
            <title>Description</title>
            <p><codeph>ALTER FOREIGN TABLE</codeph> changes the definition of an existing foreign table. There are several subforms of the command:</p>
            <parml>
                <plentry>
                    <pt>ADD COLUMN</pt>
                    <pd>
                        <p>This form adds a new column to the foreign table, using the same syntax as <codeph><xref href="CREATE_FOREIGN_TABLE.xml#topic1">CREATE FOREIGN TABLE</xref></codeph>.</p>
                    </pd>
                </plentry>
                <plentry>
                    <pt>DROP COLUMN [ IF EXISTS ]</pt>
                    <pd>
                        <p>This form drops a column from a foreign table. You must specify <codeph>CASCADE</codeph> if any objects outside of the table depend on the column; for example, views. If you specify <codeph>IF EXISTS</codeph> and the column does not exist, no error is thrown. Greenplum Database issues a notice instead.</p>
                    </pd>
                </plentry>
                <plentry>
                    <pt>SET DATA TYPE</pt>
                    <pd>
                        <p>This form changes the type of a column of a foreign table.</p>
                    </pd>
                </plentry>
                <plentry>
                    <pt>SET/DROP NOT NULL</pt>
                    <pd>
                        <p>Mark a column as allowing, or not allowing, null values.</p>
                    </pd>
                </plentry>
                <plentry>
                    <pt>OWNER</pt>
                    <pd>
                        <p>This form changes the owner of the foreign table to the specified user.</p>
                    </pd>
                </plentry>
                <plentry>
                    <pt>RENAME</pt>
                    <pd>
                        <p>The <codeph>RENAME</codeph> forms changes the name of a foreign table or the name of an individual column in a foreign table.</p>
                    </pd>
                </plentry>
                <plentry>
                    <pt>SET SCHEMA</pt>
                    <pd>
                        <p>This form moves the foreign table into another schema.</p>
                    </pd>
                </plentry>
                <plentry>
                    <pt>OPTIONS ( [ ADD | SET | DROP ] <varname>option</varname> ['<varname>value</varname>'] [, ... ] )</pt>
                    <pd>
                        <p>Change options for the foreign table. <codeph>ADD</codeph>, <codeph>SET</codeph>, and <codeph>DROP</codeph> specify the action to perform. If no operation is explicitly specified, the default operation is <codeph>ADD</codeph>. Option names must be unique. Greenplum Database validates names and values using the server's foreign-data wrapper.</p>
                    </pd>
                </plentry>
            </parml>
            <p>You can combine all of the actions except <codeph>RENAME</codeph> and <codeph>SET SCHEMA</codeph> into a list of multiple alterations for Greenplum Database to apply in parallel. For example, it is possible to add several columns and/or alter the type of several columns in a single command.</p>
            <p>You must own the table to use <codeph>ALTER FOREIGN TABLE</codeph>. To change the schema of a foreign table, you must also have <codeph>CREATE</codeph> privilege on the new schema. To alter the owner, you must also be a direct or indirect member of the new owning role, and that role must have <codeph>CREATE</codeph> privilege on the table's schema. (These restrictions enforce that altering the owner doesn't do anything you couldn't do by dropping and recreating the table. However, a superuser can alter ownership of any table anyway.)</p>
        </section>
        <section id="section4">
            <title>Parameters</title>
            <parml>
                <plentry>
                    <pt><varname>name</varname></pt>
                    <pd>
                        <p>The name (possibly schema-qualified) of an existing foreign table to alter.</p>
                    </pd>
                </plentry>
                <plentry>
                    <pt><varname>column</varname></pt>
                    <pd>
                        <p>The name of a new or existing column.</p>
                    </pd>
                </plentry>
                <plentry>
                    <pt><varname>new_column</varname></pt>
                    <pd>
                        <p>The new name for an existing column.</p>
                    </pd>
                </plentry>
                <plentry>
                    <pt><varname>new_name</varname></pt>
                    <pd>
                        <p>The new name for the foreign table.</p>
                    </pd>
                </plentry>
                <plentry>
                    <pt><varname>type</varname></pt>
                    <pd>
                        <p>The data type of the new column, or new data type for an existing column.</p>
                    </pd>
                </plentry>
                <plentry>
                    <pt>CASCADE</pt>
                    <pd>
                        <p>Automatically drop objects that depend on the dropped column (for example, views referencing the column).</p>
                    </pd>
                </plentry>
                <plentry>
                    <pt>RESTRICT</pt>
                    <pd>
                        <p>Refuse to drop the column if there are any dependent objects. This is the default behavior.</p>
                    </pd>
                </plentry>
                <plentry>
                    <pt><varname>new_owner</varname></pt>
                    <pd>
                        <p>The user name of the new owner of the foreign table.</p>
                    </pd>
                </plentry>
                <plentry>
                    <pt><varname>new_schema</varname></pt>
                    <pd>
                        <p>The name of the schema to which the foreign table will be moved.</p>
                    </pd>
                </plentry>
            </parml>
        </section>
        <section id="section5">
            <title>Notes</title>
              <p>The key word <codeph>COLUMN</codeph> is noise and can be omitted.</p>
              <p>Consistency with the foreign server is not checked when a column is added or removed with <codeph>ADD COLUMN</codeph> or <codeph>DROP COLUMN</codeph>, a <codeph>NOT NULL</codeph> constraint is added, or a column type is changed with <codeph>SET DATA TYPE</codeph>. It is your responsibility to ensure that the table definition matches the remote side.</p>
              <p>Refer to <codeph><xref href="CREATE_FOREIGN_TABLE.xml#topic1">CREATE FOREIGN TABLE</xref></codeph> for a further description of valid parameters.</p>
        </section>
        <section id="section6">
            <title>Examples</title>
            <p>To mark a column as not-null:</p><codeblock>ALTER FOREIGN TABLE distributors ALTER COLUMN street SET NOT NULL;</codeblock>
            <p>To change the options of a foreign table:</p><codeblock>ALTER FOREIGN TABLE myschema.distributors 
    OPTIONS (ADD opt1 'value', SET opt2 'value2', DROP opt3 'value3');</codeblock>
        </section>
        <section id="section7">
            <title>Compatibility</title>
            <p>The forms <codeph>ADD</codeph>, <codeph>DROP</codeph>, and <codeph>SET DATA TYPE</codeph> conform with the SQL standard. The other forms are Greenplum Database extensions of the SQL standard. The ability to specify more than one manipulation in a single <codeph>ALTER FOREIGN TABLE</codeph> command is also a Greenplum Database extension.</p>
            <p>You can use <codeph>ALTER FOREIGN TABLE ... DROP COLUMN</codeph> to drop the only column of a foreign table, leaving a zero-column table. This is an extension of SQL, which disallows zero-column foreign tables.</p>
        </section>
        <section id="section8">
            <title>See Also</title>
            <p><codeph><xref href="CREATE_FOREIGN_TABLE.xml#topic1">CREATE FOREIGN TABLE</xref></codeph>,
                        <codeph><xref href="DROP_FOREIGN_TABLE.xml#topic1">DROP
                    FOREIGN TABLE</xref></codeph></p>
        </section>
    </body>
</topic>
