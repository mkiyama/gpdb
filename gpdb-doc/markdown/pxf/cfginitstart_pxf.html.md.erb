---
title: Initializing and Managing PXF
---

<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->

You must initialize and start PXF before you can use the framework.

## <a id="init_pxf"></a>Initializing PXF

You must explicitly initialize the PXF service instance. This one-time initialization creates the PXF service web application and generates PXF configuration files and templates.

PXF supports both internal and user-customizable configuration properties. Initializing PXF generates PXF internal configuration files, setting default properties specific to your configuration. Initializing PXF also generates configuration file templates for user-customizable settings such as custom profiles and PXF runtime and logging settings.

PXF internal configuration files are located in `$GPHOME/pxf/conf`. You identify the PXF user configuration directory at initialization time via an environment variable named `$PXF_CONF`. If you do not set `$PXF_CONF` prior to initializing PXF, PXF prompts you to accept or decline the default user configuration directory, `$HOME/pxf`, during the initialization process.

During initialization, PXF creates the `$PXF_CONF` directory if necessary, and then populates it with subdirectories and template files. Refer to [PXF User Configuration Directories](about_pxf_dir.html#usercfg) for a list of these directories and their contents.


### <a id="init-pxf-prereq"></a>Prerequisites

Before initializing PXF in your Greenplum Database cluster, be sure to identify the filesystem location for the PXF user configuration directory, `$PXF_CONF`.
 
### <a id="init-pxf-steps"></a>Procedure

Perform the following procedure to initialize PXF on each segment host in your Greenplum Database cluster. You will use the `gpssh` utility to run a command on multiple hosts.

1. Log in to the Greenplum Database master node and set up your environment:

    ``` shell
    $ ssh gpadmin@<gpmaster>
    gpadmin@gpmaster$ . /usr/local/greenplum-db/greenplum_path.sh
    ```

2. Create a text file that lists your Greenplum Database segment hosts, one host name per line. For example, a file named `seghostfile` may include:

    ``` pre
    seghost1
    seghost2
    seghost3
    ```

3. If not already present, install the `unzip` package on the master and each Greenplum Database segment host. You must have operating system super user privileges to install packages. For example:

    ``` shell
    gpadmin@gpmaster$ sudo yum -y install unzip
    gpadmin@gpmaster$ gpssh -e -v -f seghostfile "sudo yum -y install unzip"
    ```

4. Run the `pxf init` command to initialize the PXF service on the master and each segment host. For example, the following command specifies `/etc/pxf/usercfg` as the PXF user configuration directory for initialization. (Note that the `gpadmin` user must have permission to either create, or write to, the specified directory.)

    ``` shell
    gpadmin@gpmaster$ PXF_CONF=/etc/pxf/usercfg /usr/local/greenplum-db/pxf/bin/pxf init
    gpadmin@gpmaster$ gpssh -e -v -f seghostfile 'PXF_CONF=/etc/pxf/usercfg /usr/local/greenplum-db/pxf/bin/pxf init'
    ```

    The `init` command creates the PXF web application and initializes the internal PXF configuration. The `init` command also creates the `$PXF_CONF` user configuration directory if it does not exist, and populates the directory with user-customizable configuration templates.

    **Note**: The PXF service runs only on the segment hosts. However, you must execute `pxf init` on the master to set up the PXF user configuration directories there.


## <a id="start_pxf"></a>Starting PXF

After initializing PXF, you must explicitly start PXF on each segment host in your Greenplum Database cluster. The PXF service, once started, runs as the `gpadmin` user on default port 5888. Only the `gpadmin` user can start and stop the PXF service.

If you want to change the default PXF configuration, you must update the configuration before you start PXF.

`$PXF_CONF/conf` includes these user-customizable configuration files:

- `pxf-env.sh` - runtime configuration parameters
- `pxf-log4j.properties` - logging configuration parameters
- `pxf-profiles.xml` - custom profile definitions

The `pxf-env.sh` file exposes the following PXF runtime configuration parameters:

| Parameter  | Description | Default Value |
|-----------|---------------| ------------|
| JAVA_HOME    | The Java JRE home directory. | /usr/java/default |
| PXF_LOG_DIR   | The PXF log directory. | $PXF_CONF/logs |
| PXF_JVM_OPTS  | Default options for the PXF Java virtual machine. | -Xmx2g -Xms1g |
| PXF_KEYTAB  | The absolute path to the PXF service Kerberos principal keytab file. | $PXF_CONF/keytabs/pxf.service.keytab |
| PXF_PRINCIPAL  | The PXF service Kerberos principal. | gpadmin/\_HOST@EXAMPLE.COM |

You must propagate any updates that you make to `pxf-env.sh`, `pxf-log4j.properties`, or `pxf-profiles.xml` to each Greenplum Database segment host, and (re)start PXF on each host.

### <a id="start_pxf_prereq"></a>Prerequisites

Before you start PXF in your Greenplum Database cluster, ensure that you have previously initialized PXF.
 
### <a id="start_pxf_proc"></a>Procedure

Perform the following procedure to start PXF on each segment host in your Greenplum Database cluster.  You will use the `gpssh` command and a `seghostfile` to run the command on multiple hosts.

1. Log in to the Greenplum Database master node and set up your environment:

    ``` shell
    $ ssh gpadmin@<gpmaster>
    gpadmin@gpmaster$ . /usr/local/greenplum-db/greenplum_path.sh
    ```

3. Run the `pxf start` command to start PXF on each segment host. For example:

    ```shell
    gpadmin@gpmaster$ gpssh -e -v -f seghostfile "/usr/local/greenplum-db/pxf/bin/pxf start"
    ```

## <a id="stop_pxf"></a>Stopping PXF

If you must stop PXF, for example if you are upgrading PXF, you must explicitly stop PXF on each segment host in your Greenplum Database cluster. Only the `gpadmin` user can stop the PXF service.

Perform the following procedure to stop PXF on each segment host in your Greenplum Database cluster.  You will use the `gpssh` command and a `seghostfile` to run the command on multiple hosts.

1. Log in to the Greenplum Database master node and set up your environment:

    ``` shell
    $ ssh gpadmin@<gpmaster>
    gpadmin@gpmaster$ . /usr/local/greenplum-db/greenplum_path.sh
    ```

3. Run the `pxf stop` command to stop PXF on each segment host. For example:

    ```shell
    gpadmin@gpmaster$ gpssh -e -v -f seghostfile "/usr/local/greenplum-db/pxf/bin/pxf stop"
    ```

## <a id="pxf_svc_mgmt"></a>PXF Service Management

The `pxf` command supports `init`, `start`, `stop`, `restart`, and `status` operations. These operations run locally. That is, if you want to start or stop the PXF agent on a specific segment host, you can log in to the host and run the command. If you want to start or stop the PXF agent on multiple segment hosts, use the `gpssh` utility as shown above, or individually log in to each segment host and run the command.

**Note**: If you have configured PXF Hadoop connectors and you update your Hadoop (or Hive or HBase) configuration while the PXF service is running, you must copy any updated configuration files to each Greenplum Database segment host and restart PXF on each host.

