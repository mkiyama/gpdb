-- helpers:
include: helpers/server_helpers.sql;
CREATE

-- expect: create table succeeds
create unlogged table unlogged_appendonly_table_managers ( id int, name text ) with ( appendonly=true ) distributed by (id);
CREATE


-- expect: insert/update/select works
insert into unlogged_appendonly_table_managers values (1, 'Joe');
INSERT 1
insert into unlogged_appendonly_table_managers values (2, 'Jane');
INSERT 1
update unlogged_appendonly_table_managers set name = 'Susan' where id = 2;
UPDATE 1
select * from unlogged_appendonly_table_managers order by id;
 id | name  
----+-------
 1  | Joe   
 2  | Susan 
(2 rows)
select count(1) from gp_toolkit.__gp_aoseg('unlogged_appendonly_table_managers');
 count 
-------
 1     
(1 row)


-- force an unclean stop and recovery:

-- expect inserts/updates are truncated after crash recovery
2: select * from unlogged_appendonly_table_managers;
 id | name 
----+------
(0 rows)
2: select count(1) from gp_toolkit.__gp_aoseg('unlogged_appendonly_table_managers');
 count 
-------
 1     
(1 row)


-- expect: insert/update/select works
3: insert into unlogged_appendonly_table_managers values (1, 'Joe');
INSERT 1
3: insert into unlogged_appendonly_table_managers values (2, 'Jane');
INSERT 1
3: update unlogged_appendonly_table_managers set name = 'Susan' where id = 2;
UPDATE 1
3: select * from unlogged_appendonly_table_managers order by id;
 id | name  
----+-------
 1  | Joe   
 2  | Susan 
(2 rows)
3: select count(1) from gp_toolkit.__gp_aoseg('unlogged_appendonly_table_managers');
 count 
-------
 1     
(1 row)

-- force a clean stop and recovery:

-- expect: inserts/updates are persisted
4: select * from unlogged_appendonly_table_managers order by id;
 id | name  
----+-------
 1  | Joe   
 2  | Susan 
(2 rows)
4: select count(1) from gp_toolkit.__gp_aoseg('unlogged_appendonly_table_managers');
 count 
-------
 1     
(1 row)

-- expect: drop table succeeds
5: drop table unlogged_appendonly_table_managers;
DROP

