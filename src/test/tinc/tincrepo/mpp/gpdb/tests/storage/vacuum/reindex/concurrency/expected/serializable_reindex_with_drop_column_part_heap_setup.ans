-- @product_version gpdb: [4.3.4.0 -],4.3.4.0O2
DROP TABLE IF EXISTS reindex_serialize_tab_heap_part;
DROP

CREATE TABLE reindex_serialize_tab_heap_part ( id INTEGER, owner VARCHAR, description VARCHAR, property BOX, poli POLYGON, target CIRCLE, v VARCHAR, t TEXT, f FLOAT, p POINT, c CIRCLE, filler VARCHAR DEFAULT 'Big data is difficult to work with using most relational database management systems and desktop statistics and visualization packages, requiring instead massively parallel software running on tens, hundreds, or even thousands of servers.What is considered big data varies depending on the capabilities of the organization managing the set, and on the capabilities of the applications.This is here just to take up space so that we use more pages of data and sequential scans take a lot more time. ')DISTRIBUTED BY (id) PARTITION BY RANGE (id) ( PARTITION p_one START('1') INCLUSIVE END ('10') EXCLUSIVE, DEFAULT PARTITION de_fault );
CREATE
insert into reindex_serialize_tab_heap_part (id, owner, description, property, poli, target) select i, 'user' || i, 'Testing GiST Index', '((3, 1300), (33, 1330))','( (22,660), (57, 650), (68, 660) )', '( (76, 76), 76)' from generate_series(1,1000) i ;
INSERT 1000
insert into reindex_serialize_tab_heap_part (id, owner, description, property, poli, target) select i, 'user' || i, 'Testing GiST Index', '((3, 1300), (33, 1330))','( (22,660), (57, 650), (68, 660) )', '( (76, 76), 76)' from generate_series(1,1000) i ;
INSERT 1000

create index idxa_reindex_serialize_tab_heap_part on reindex_serialize_tab_heap_part(id);
CREATE
create index idxb_reindex_serialize_tab_heap_part on reindex_serialize_tab_heap_part(owner);
CREATE
create index idxc_reindex_serialize_tab_heap_part on reindex_serialize_tab_heap_part USING GIST(property);
CREATE
create index idxd_reindex_serialize_tab_heap_part on reindex_serialize_tab_heap_part USING GIST(poli);
CREATE
create index idxe_reindex_serialize_tab_heap_part on reindex_serialize_tab_heap_part USING GIST(target);
CREATE
create index idxf_reindex_serialize_tab_heap_part on reindex_serialize_tab_heap_part USING BITMAP(v);
CREATE
create index idxh_reindex_serialize_tab_heap_part on reindex_serialize_tab_heap_part USING GIST(c);
CREATE
create index idxi_reindex_serialize_tab_heap_part on reindex_serialize_tab_heap_part(f);
CREATE
