-- @Description The locks held after different operations
DROP TABLE IF EXISTS ao;
CREATE TABLE ao (a INT, b INT) WITH (appendonly=true);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
INSERT INTO ao SELECT i as a, i as b FROM generate_series(1, 100) AS i;
create or replace view locktest_master as
select coalesce(
  case when relname like 'pg_toast%index' then 'toast index'
       when relname like 'pg_toast%' then 'toast table'
       when relname like 'pg_aoseg%' then 'aoseg table'
       when relname like 'pg_aovisimap%index' then 'aovisimap index'
       when relname like 'pg_aovisimap%' then 'aovisimap table'
       else relname end, 'dropped table'),
  mode,
  locktype,
  'master'::text as node
from pg_locks l
left outer join pg_class c on ((l.locktype = 'append-only segment file' and l.relation = c.relfilenode) or (l.locktype != 'append-only segment file' and l.relation = c.oid)),
pg_database d
where relation is not null
and l.database = d.oid
and (relname <> 'gp_fault_strategy' and relname != 'locktest_master' or relname is NULL)
and d.datname = current_database()
and l.gp_segment_id = -1
group by l.gp_segment_id, relation, relname, locktype, mode
order by 1, 3, 2;
create or replace view locktest_segments_dist as
select relname,
  mode,
  locktype,
  l.gp_segment_id as node,
  relation
from pg_locks l
left outer join pg_class c on ((l.locktype = 'append-only segment file' and l.relation = c.relfilenode) or (l.locktype != 'append-only segment file' and l.relation = c.oid)),
pg_database d
where relation is not null
and l.database = d.oid
and (relname <> 'gp_fault_strategy' and relname != 'locktest_segments_dist' or relname is NULL)
and d.datname = current_database()
and l.gp_segment_id > -1
group by l.gp_segment_id, relation, relname, locktype, mode;
create or replace view locktest_segments as
SELECT coalesce(
  case when relname like 'pg_toast%index' then 'toast index'
       when relname like 'pg_toast%' then 'toast table'
       when relname like 'pg_aoseg%' then 'aoseg table'
       when relname like 'pg_aovisimap%index' then 'aovisimap index'
       when relname like 'pg_aovisimap%' then 'aovisimap table'
       else relname end, 'dropped table'),
  mode,
  locktype,
  case when count(*) = 1 then '1 segment'
       else 'n segments' end as node
  FROM gp_dist_random('locktest_segments_dist')
  group by relname, relation, mode, locktype;
-- Actual test begins
BEGIN;
INSERT INTO ao VALUES (200, 200);
SELECT * FROM locktest_master;
          coalesce          |        mode         |         locktype         |  node  
----------------------------+---------------------+--------------------------+--------
 ao                         | AccessExclusiveLock | append-only segment file | master
 ao                         | RowExclusiveLock    | relation                 | master
 pg_class                   | AccessShareLock     | relation                 | master
 pg_class_oid_index         | AccessShareLock     | relation                 | master
 pg_class_relname_nsp_index | AccessShareLock     | relation                 | master
 pg_locks                   | AccessShareLock     | relation                 | master
(6 rows)

SELECT * FROM locktest_segments;
 coalesce |        mode         |         locktype         |    node    
----------+---------------------+--------------------------+------------
 ao       | RowExclusiveLock    | relation                 | 1 segment
 ao       | AccessExclusiveLock | append-only segment file | 1 segment
 pg_class | AccessShareLock     | relation                 | n segments
(3 rows)

COMMIT;
BEGIN;
DELETE FROM ao WHERE a = 1;
SELECT * FROM locktest_master;
          coalesce          |        mode         |         locktype         |  node  
----------------------------+---------------------+--------------------------+--------
 ao                         | AccessExclusiveLock | append-only segment file | master
 ao                         | ExclusiveLock       | relation                 | master
 pg_class                   | AccessShareLock     | relation                 | master
 pg_class_oid_index         | AccessShareLock     | relation                 | master
 pg_class_relname_nsp_index | AccessShareLock     | relation                 | master
 pg_locks                   | AccessShareLock     | relation                 | master
(6 rows)

SELECT * FROM locktest_segments;
    coalesce     |       mode       | locktype |    node    
-----------------+------------------+----------+------------
 pg_class        | AccessShareLock  | relation | n segments
 ao              | RowExclusiveLock | relation | 1 segment
 aovisimap index | RowExclusiveLock | relation | 1 segment
 aovisimap table | RowExclusiveLock | relation | 1 segment
(4 rows)

COMMIT;
BEGIN;
UPDATE ao SET b = -1 WHERE a = 2;
SELECT * FROM locktest_master;
          coalesce          |        mode         |         locktype         |  node  
----------------------------+---------------------+--------------------------+--------
 ao                         | AccessExclusiveLock | append-only segment file | master
 ao                         | ExclusiveLock       | relation                 | master
 pg_class                   | AccessShareLock     | relation                 | master
 pg_class_oid_index         | AccessShareLock     | relation                 | master
 pg_class_relname_nsp_index | AccessShareLock     | relation                 | master
 pg_locks                   | AccessShareLock     | relation                 | master
(6 rows)

SELECT * FROM locktest_segments;
    coalesce     |        mode         |         locktype         |    node    
-----------------+---------------------+--------------------------+------------
 ao              | AccessExclusiveLock | append-only segment file | 1 segment
 ao              | RowExclusiveLock    | relation                 | 1 segment
 aovisimap index | RowExclusiveLock    | relation                 | 1 segment
 aovisimap table | RowExclusiveLock    | relation                 | 1 segment
 pg_class        | AccessShareLock     | relation                 | n segments
(5 rows)

COMMIT;
