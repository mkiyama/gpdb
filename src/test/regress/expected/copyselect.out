--
-- Test cases for COPY (select) TO
--
create table copyselect_test1 (id serial, t text);
NOTICE:  CREATE TABLE will create implicit sequence "copyselect_test1_id_seq" for serial column "copyselect_test1.id"
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'id' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
insert into copyselect_test1 (t) values ('a');
insert into copyselect_test1 (t) values ('b');
insert into copyselect_test1 (t) values ('c');
insert into copyselect_test1 (t) values ('d');
insert into copyselect_test1 (t) values ('e');
create table copyselect_test2 (id serial, t text);
NOTICE:  CREATE TABLE will create implicit sequence "copyselect_test2_id_seq" for serial column "copyselect_test2.id"
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'id' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
insert into copyselect_test2 (t) values ('A');
insert into copyselect_test2 (t) values ('B');
insert into copyselect_test2 (t) values ('C');
insert into copyselect_test2 (t) values ('D');
insert into copyselect_test2 (t) values ('E');
create view v_copyselect_test1
as select 'v_'||t from copyselect_test1;
--
-- Test COPY table TO
--
copy copyselect_test1 to stdout;
1	a
2	b
3	c
4	d
5	e
--
-- This should fail
--
copy v_copyselect_test1 to stdout;
ERROR:  cannot copy from view "v_copyselect_test1"
HINT:  Try the COPY (SELECT ...) TO variant.
--
-- Test COPY (select) TO
--
copy (select t from copyselect_test1 where id=1) to stdout;
a
--
-- Test COPY (select for update) TO
--
copy (select t from copyselect_test1 where id=3 for update) to stdout;
c
--
-- This should fail
--
copy (select t into temp test3 from copyselect_test1 where id=3) to stdout;
ERROR:  COPY (SELECT INTO) is not supported
--
-- This should fail
--
copy (select * from copyselect_test1) from stdin;
ERROR:  syntax error at or near "from"
LINE 1: copy (select * from copyselect_test1) from stdin;
                                              ^
--
-- This should fail
--
copy (select * from copyselect_test1) (t,id) to stdout;
ERROR:  syntax error at or near "("
LINE 1: copy (select * from copyselect_test1) (t,id) to stdout;
                                              ^
--
-- Test JOIN
--
copy (select * from copyselect_test1 join copyselect_test2 using (id)) to stdout;
2	b	B
4	d	D
1	a	A
3	c	C
5	e	E
--
-- Test UNION SELECT
--
copy (select t from copyselect_test1 where id = 1 UNION select * from v_copyselect_test1 ORDER BY 1) to stdout;
a
v_a
v_b
v_c
v_d
v_e
--
-- Test subselect
--
copy (select * from (select t from copyselect_test1 where id = 1 UNION select * from v_copyselect_test1) t1 ORDER BY 1) to stdout;
a
v_a
v_b
v_c
v_d
v_e
--
-- Test headers, CSV and quotes
--
copy (select t from copyselect_test1 where id = 1) to stdout csv header force quote t;
t
"a"
--
-- Test psql builtins, plain table
--
\copy copyselect_test1 to stdout
1	a
2	b
3	c
4	d
5	e
--
-- This should fail
--
\copy v_copyselect_test1 to stdout
ERROR:  cannot copy from view "v_copyselect_test1"
HINT:  Try the COPY (SELECT ...) TO variant.
\copy: ERROR:  cannot copy from view "v_copyselect_test1"
HINT:  Try the COPY (SELECT ...) TO variant.
--
-- Test \copy (select ...)
--
\copy (select "id",'id','id""'||t,(id + 1)*id,t,"copyselect_test1"."t" from copyselect_test1 where id=3) to stdout
3	id	id""c	12	c	c
--
-- Drop everything
--
drop table copyselect_test2;
drop view v_copyselect_test1;
drop table copyselect_test1;
