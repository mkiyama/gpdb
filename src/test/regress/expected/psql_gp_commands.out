--
-- Test \dx and \dx+, to display extensions.
--
-- We just use gp_inject_fault as an example of an extension here. We don't
-- inject any faults.
-- start_ignore
CREATE EXTENSION IF NOT EXISTS gp_inject_fault;
-- end_ignore
\dx gp_inject*
                           List of installed extensions
      Name       | Version | Schema |                 Description                  
-----------------+---------+--------+----------------------------------------------
 gp_inject_fault | 1.0     | public | simulate various faults for testing purposes
(1 row)

\dx+ gp_inject*
                       Objects in extension "gp_inject_fault"
                                 Object Description                                 
------------------------------------------------------------------------------------
 function gp_inject_fault_infinite(text,text,integer)
 function gp_inject_fault(text,text,integer)
 function gp_inject_fault(text,text,text,text,text,integer,integer,integer,integer)
 function gp_wait_until_triggered_fault(text,integer,integer)
(4 rows)

--
-- Test extended \du flags
--
-- https://github.com/greenplum-db/gpdb/issues/1028
--
-- Problem: the cluster can be initialized with any Unix user
--          therefore create specific test roles here, and only
--          test the \du output for this role, also drop them afterwards
CREATE ROLE test_psql_du_1 WITH SUPERUSER;
\du test_psql_du_1
                    List of roles
   Role name    |       Attributes        | Member of 
----------------+-------------------------+-----------
 test_psql_du_1 | Superuser, Cannot login | {}

DROP ROLE test_psql_du_1;
CREATE ROLE test_psql_du_2 WITH SUPERUSER CREATEDB CREATEROLE CREATEEXTTABLE LOGIN CONNECTION LIMIT 5;
\du test_psql_du_2
                                   List of roles
   Role name    |                      Attributes                      | Member of 
----------------+------------------------------------------------------+-----------
 test_psql_du_2 | Superuser, Create role, Create DB, Ext gpfdist Table+| {}
                | 5 connections                                        | 

DROP ROLE test_psql_du_2;
-- pg_catalog.pg_roles.rolcreaterextgpfd
CREATE ROLE test_psql_du_e1 WITH SUPERUSER CREATEEXTTABLE (type = 'readable', protocol = 'gpfdist');
\du test_psql_du_e1
                              List of roles
    Role name    |                 Attributes                 | Member of 
-----------------+--------------------------------------------+-----------
 test_psql_du_e1 | Superuser, Ext gpfdist Table, Cannot login | {}

DROP ROLE test_psql_du_e1;
CREATE ROLE test_psql_du_e2 WITH SUPERUSER CREATEEXTTABLE (type = 'readable', protocol = 'gpfdists');
\du test_psql_du_e2
                              List of roles
    Role name    |                 Attributes                 | Member of 
-----------------+--------------------------------------------+-----------
 test_psql_du_e2 | Superuser, Ext gpfdist Table, Cannot login | {}

DROP ROLE test_psql_du_e2;
-- pg_catalog.pg_roles.rolcreatewextgpfd
CREATE ROLE test_psql_du_e3 WITH SUPERUSER CREATEEXTTABLE (type = 'writable', protocol = 'gpfdist');
\du test_psql_du_e3
                                List of roles
    Role name    |                   Attributes                   | Member of 
-----------------+------------------------------------------------+-----------
 test_psql_du_e3 | Superuser, Wri Ext gpfdist Table, Cannot login | {}

DROP ROLE test_psql_du_e3;
CREATE ROLE test_psql_du_e4 WITH SUPERUSER CREATEEXTTABLE (type = 'writable', protocol = 'gpfdists');
\du test_psql_du_e4
                                List of roles
    Role name    |                   Attributes                   | Member of 
-----------------+------------------------------------------------+-----------
 test_psql_du_e4 | Superuser, Wri Ext gpfdist Table, Cannot login | {}

DROP ROLE test_psql_du_e4;
-- pg_catalog.pg_roles.rolcreaterexthttp
CREATE ROLE test_psql_du_e5 WITH SUPERUSER CREATEEXTTABLE (type = 'readable', protocol = 'http');
\du test_psql_du_e5
                             List of roles
    Role name    |               Attributes                | Member of 
-----------------+-----------------------------------------+-----------
 test_psql_du_e5 | Superuser, Ext http Table, Cannot login | {}

DROP ROLE test_psql_du_e5;
-- does not exist
CREATE ROLE test_psql_du_e6 WITH SUPERUSER CREATEEXTTABLE (type = 'writable', protocol = 'http');
ERROR:  invalid CREATEEXTTABLE specification. writable http external tables do not exist
\du test_psql_du_e6
           List of roles
 Role name | Attributes | Member of 
-----------+------------+-----------

DROP ROLE test_psql_du_e6;
ERROR:  role "test_psql_du_e6" does not exist
-- pg_catalog.pg_roles.rolcreaterexthdfs
CREATE ROLE test_psql_du_e7 WITH SUPERUSER CREATEEXTTABLE (type = 'readable', protocol = 'gphdfs');
WARNING:  GRANT/REVOKE on gphdfs is deprecated
HINT:  Issue the GRANT or REVOKE on the protocol itself
\du test_psql_du_e7
                             List of roles
    Role name    |               Attributes                | Member of 
-----------------+-----------------------------------------+-----------
 test_psql_du_e7 | Superuser, Ext hdfs Table, Cannot login | {}

DROP ROLE test_psql_du_e7;
-- pg_catalog.pg_roles.rolcreatewexthdfs
CREATE ROLE test_psql_du_e8 WITH SUPERUSER CREATEEXTTABLE (type = 'writable', protocol = 'gphdfs');
WARNING:  GRANT/REVOKE on gphdfs is deprecated
HINT:  Issue the GRANT or REVOKE on the protocol itself
\du test_psql_du_e8
                               List of roles
    Role name    |                 Attributes                  | Member of 
-----------------+---------------------------------------------+-----------
 test_psql_du_e8 | Superuser, Wri Ext hdfs Table, Cannot login | {}

DROP ROLE test_psql_du_e8;
-- Test replication and verbose. GPDB specific attributes are mixed with PG attributes.
-- Our role describe code is easy to be buggy when we merge with PG upstream code.
-- The tests here are used to double-confirm the correctness of our role describe code.
CREATE ROLE test_psql_du_e9 WITH SUPERUSER REPLICATION;
COMMENT ON ROLE test_psql_du_e9 IS 'test_role_description';
\du test_psql_du_e9
                           List of roles
    Role name    |              Attributes              | Member of 
-----------------+--------------------------------------+-----------
 test_psql_du_e9 | Superuser, Cannot login, Replication | {}

\du+ test_psql_du_e9
                                       List of roles
    Role name    |              Attributes              | Member of |      Description      
-----------------+--------------------------------------+-----------+-----------------------
 test_psql_du_e9 | Superuser, Cannot login, Replication | {}        | test_role_description

DROP ROLE test_psql_du_e9;
--
-- Test that \dE displays both external and foreign tables
--
CREATE FOREIGN DATA WRAPPER dummy_wrapper;
COMMENT ON FOREIGN DATA WRAPPER dummy_wrapper IS 'useless';
CREATE SERVER dummy_server FOREIGN DATA WRAPPER dummy_wrapper;
CREATE FOREIGN TABLE "dE_foreign_table" (c1 integer)
  SERVER dummy_server;
CREATE EXTERNAL TABLE "dE_external_table"  (c1 integer)
  LOCATION ('file://localhost/dummy') FORMAT 'text';
-- Change the owner, so that the expected output is not sensitive to current
-- username.
CREATE ROLE test_psql_de_role;
NOTICE:  resource queue required -- using default resource queue "pg_default"
ALTER FOREIGN TABLE "dE_foreign_table" OWNER TO test_psql_de_role;
ALTER EXTERNAL TABLE "dE_external_table" OWNER TO test_psql_de_role;
\dE "dE"*
                             List of relations
 Schema |       Name        |     Type      |       Owner       | Storage  
--------+-------------------+---------------+-------------------+----------
 public | dE_external_table | table         | test_psql_de_role | external
 public | dE_foreign_table  | foreign table | test_psql_de_role | foreign
(2 rows)

-- Clean up
DROP OWNED BY test_psql_de_role;
DROP ROLE test_psql_de_role;
